package com.springapp.mvc.dal.entities;

import javax.persistence.*;
import java.util.Date;

@Entity
@Table(name = "IncomeOrExpenseRecord")
public class Record {
	
	public static final String RECORD_ID_FIELD_NAME = "id";
	public static final String DATE_FIELD_NAME = "date";
	public static final String TIMESTAMP_FIELD_NAME = "timestamp";
	public static final String ACCOUNT_FIELD_NAME = "account";
	public static final String CATEGORY_FIELD_NAME = "category";
	public static final String DESCRIPTION_FIELD_NAME = "description";
	public static final String AMOUNT_FIELD_NAME = "amount";
	public static final String IS_EXPENSE_FIELD_NAME = "isExpense";
	public static final String IS_REGULAR_FIELD_NAME = "isRegular";
	public static final String IS_PLANNED_FIELD_NAME = "isPlanned";

	// id is generated by the database and set on the object automatically
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = RECORD_ID_FIELD_NAME)
	//@DatabaseField(generatedId = true, name = RECORD_ID_FIELD_NAME)
	private int id;

    @Column(name = DATE_FIELD_NAME)
	private Date date;

    @Column(name = TIMESTAMP_FIELD_NAME)
	private long timestamp; // UTC timestamp in milliseconds

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name = "account_id")
    //@JoinColumn(foreignKey = @ForeignKey(name = Account.ACCOUNT_ID_FIELD_NAME), nullable = false)
    //@Column(nullable = false, name = ACCOUNT_FIELD_NAME)
	private Account account;

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name = "category_id")
    //@JoinColumn(foreignKey = @ForeignKey(name = Category.CATEGORY_ID_FIELD_NAME), nullable = false)
    //@Column(nullable = false, name = CATEGORY_FIELD_NAME)
	private Category category;
	
	@Column(name = DESCRIPTION_FIELD_NAME)
	private String description; // can play a role of subcategory
	
	@Column(name = AMOUNT_FIELD_NAME)
	private double amount;
	
	@Column(name = IS_EXPENSE_FIELD_NAME)
	private boolean isExpense; // Expense - true, Income - false
	
	@Column(name = IS_REGULAR_FIELD_NAME)
	private boolean isRegular; // Record added by service - true, added manually - false
	
	@Column(name = IS_PLANNED_FIELD_NAME)
	private boolean isPlanned; // Planned Income/Expense record - true, actual - false
	
	public Record() {
		// needed by JPA
	}

	public Record(Date date, Account account, Category category, String description,
                  double amount, boolean isExpense, boolean isRegular, boolean isPlanned) {
		super();
		this.timestamp = System.currentTimeMillis();
		this.date = date;
		this.account = account;
		this.amount = amount;
		this.category = category;
		this.description = description;
		this.isExpense = isExpense;
		this.isRegular = isRegular;
		this.isPlanned = isPlanned;
	}

	public void setId(int recordId) {
		this.id = recordId;
	}
	
	public int getId() {
		return id;
	}
	
	public Date getDate() {
		return date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	public long getTimestamp() {
		return timestamp;
	}

	public void setTimestamp(long millis) {
		this.timestamp = millis;
	}

	public Account getAccount() {
		return account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	public Category getCategory() {
		return category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public double getAmount() {
		return amount;
	}

	public void setAmount(double amount) {
		this.amount = amount;
	}

	public boolean isRegular() {
		return isRegular;
	}

	public void setRegular(boolean isRegular) {
		this.isRegular = isRegular;
	}

	public boolean isExpense() {
		return isExpense;
	}

	public void setExpense(boolean isExpense) {
		this.isExpense = isExpense;
	}
	
	public boolean isPlanned() {
		return isPlanned;
	}

	public void setPlanned(boolean isPlanned) {
		this.isPlanned = isPlanned;
	}

	@Override
	public String toString() {
		return "IncomeOrExpenseRecord [id=" + id + ", date=" + date
				+ ", timestamp=" + timestamp + ", account=" + account
				+ ", category=" + category + ", description=" + description
				+ ", amount=" + amount + ", isExpense=" + isExpense
				+ ", isRegular=" + isRegular + ", isPlanned=" + isPlanned + "]";
	}
}
